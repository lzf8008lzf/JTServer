/**
 * @author yinheli
 */

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

buildscript {
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE'
    }
}

group = 'com.tuniondata.jtserver'
version = '1.0.0-SNAPSHOT'

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

test {
    jvmArgs '-noverify'
}

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

configurations {
    compile.exclude module: 'slf4j-nop'
    compile.exclude module: 'logback-classic'
}

dependencies {
    compile 'org.springframework.boot:spring-boot'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-log4j2'
    compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile 'org.springframework.boot:spring-boot-starter-amqp'
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.0'
    compile 'com.github.pagehelper:pagehelper-spring-boot-starter:1.1.0'

    compile 'mysql:mysql-connector-java:5.1.20'
    compile 'commons-io:commons-io:2.3'
    compile 'commons-codec:commons-codec:1.10'
    compile 'commons-beanutils:commons-beanutils:1.9.3'
    compile 'org.apache.commons:commons-compress:1.5'
    compile 'org.apache.commons:commons-lang3:3.4'

    compile 'io.springfox:springfox-swagger-ui:2.6.1'
    compile 'io.springfox:springfox-swagger2:2.6.1'
    compile 'io.springfox:springfox-bean-validators:2.6.1'

    compile 'net.coobird:thumbnailator:0.4.8'

    compile 'com.google.zxing:core:3.1.0'
    compile 'com.google.zxing:javase:3.1.0'

    compile('org.apache.curator:curator-recipes:2.9.0') {
        exclude module: 'log4j'
    }

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'junit:junit:4.12'
}

jar {
    exclude 'application.properties'
    exclude 'log4j2.xml'

    manifest {
        attributes 'Build-Date': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'Built-By': System.getProperty('user.name'),
            'Built-JDK': System.getProperty('java.version'),
            'Built-OS': "${System.getProperty('os.name')}/${System.getProperty('os.version')}",
            'Source-Compatibility': sourceCompatibility,
            'Target-Compatibility': targetCompatibility,
            'Rev-Revision': version,
            'Git-Revision': 'git rev-parse HEAD'.execute().text.trim(),
            'Git-Branch': 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
    }
}

task deploy(dependsOn: jar) {

    doLast {

        delete {
            "$buildDir/deploy_server"
        }

        copy {
            from "$buildDir/libs"
            from configurations.runtime
            into "$buildDir/deploy_server/lib"
        }

        copy {
            from('src/main/resources') {
                exclude '**/**/static'
                exclude '**/**/banner.txt'
            }
            into "$buildDir/deploy_server/classes"
        }

        copy {
            from 'server'
            into "$buildDir/deploy_server"
        }

    }

}

